#include<iostream>
using namespace std;
int a[100 + 5][100 + 5];//定义一个坐标数组
int main()
{
	int n, m, k, x, y, ans = 0;//n代表矩阵大小，m代表火把数量，k代表萤石数量，x和y代表的是坐标
	cin >> n >> m >> k;//n代表矩阵的大小，m代表火把，k代表萤石
	for (int i = 1; i <= m; i++)//循环m次，对应的是从第二行到第m+1行火把的坐标
	{
		//下面以一个5*5的矩阵，然后火把插在(3,3)坐标为例
		cin >> x >> y;//输入火把的坐标x和y
		for (int j = x - 1; j <= x + 1; j++)//j从2到4，循环3次
		{
			for (int k = y - 1; k <= y + 1; k++)//k从2到4,循环3次
			{
				a[j][k] = 1;//对应里面的3*3矩阵正方形
			}
		}
		a[abs(x - 2)][y] = 1;//对应点(1,3)//加abs是防止放火把在边界从而越界
		a[x + 2][y] = 1;//对应点(5,3)
		a[x][abs(y - 2)] = 1;//对应点(3,1)
		a[x][y + 2] = 1;//对应点(3,5)
	}
	for (int i = 1; i <= k; i++)
	{
		cin >> x >> y;//输入萤石坐标
		//以下萤石是以5*5的矩阵为例，萤石放在(3,3)，萤石是可以照亮所有的矩阵的
		for (int j = x - 2; j <= x + 2; j++)
		{
			for (int k = y - 2; k <= y + 2; k++)
			{
				a[j][k] = 1;//对应所有的位置
			}
		}
	}
	//搜索如果有没亮的格子答案+1
	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <=n;j++)
		{
			if (a[i][j] == 0)
			{
				ans++;
			}
		}
	}
	cout << ans << endl;
	return 0;
}